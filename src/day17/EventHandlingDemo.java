package day17;

/*
    Event Handling:
        1. generated by the mouse
        2. the keyboard
        3. various GUI controls, button, scrollbar, checkbox

        There are a number of event classes and event listener interfaces.

        Adapter Classes

    Delegation Event Model:
        -> A source generates an event and sends it to one or more listeners.
        -> The listeners simply waits until it receives an event.
        -> Once an event is received, the listener processes the event
        and then returns.
        Advantage: Separates logic to process events and UI logic.

    Events:
        -> An event is an object in Java.
        -> Describes a state change in a source.
        User: button press, enters a character using keyboard,
                selecting an item in a list,
                clicking the mouse.
        Other causes:
            Timer expiration, Counter exceeding a value.

    Event Sources:
    -> A source is an object which generates an event.
    -> This occurs when internal state of that source changes in some way.
    -> A source can generate more than one type of event.

    IMP!
    A source must register listeners.

    Syntax:
        public void addTypeListener(TypeListener el) -> defined by
        "Component" class

        Here, Type is name of event and el -> reference to event listener
        (el is a reference to the class that implements TypeListener).

        addKeyListener()
        addMouseMotionListener()
 */

public class EventHandlingDemo {
}
